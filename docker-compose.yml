services:
  app:
    build:
      context: . # Répertoire de construction, ici le répertoire courant
      dockerfile: Dockerfile # Nom du fichier Dockerfile utilisé pour construire l'image
    container_name: garage-vparrot # Nom du conteneur pour l'application
    environment: # Variables d'environnement pour l'application
      - DATABASE_URL=postgresql://kyoshiro:Devilmaycry91770.@db:5432/garage-vparrot # URL de connexion à la base de données PostgreSQL
      - NEXT_PUBLIC_API_URL=http://localhost:3000 # URL publique de l'API pour le front-end Next.js
    ports:
      - "3000:3000" # Redirige le port 3000 du conteneur vers le port 3000 de l'hôte
    volumes:
      - .:/app # Monte le répertoire de travail local dans le conteneur pour un développement interactif
      - /app/node_modules # Évite que node_modules de l'hôte entre en conflit avec ceux du conteneur
    depends_on:
      - db # Assure que le service `db` (PostgreSQL) est démarré avant `app`

  db:
    image: postgres:13 # Utilise l'image officielle de PostgreSQL version 13
    container_name: postgres-db # Nom du conteneur pour la base de données
    environment: # Variables d'environnement pour configurer PostgreSQL
      POSTGRES_USER: kyoshiro # Nom d'utilisateur pour PostgreSQL
      POSTGRES_PASSWORD: Devilmaycry91770. # Mot de passe de l'utilisateur PostgreSQL
      POSTGRES_DB: garage-vparrot # Nom de la base de données à créer au démarrage
    volumes:
      - postgres-data:/var/lib/postgresql/data # Volume pour la persistance des données de la base
    ports:
      - "5432:5432" # Expose le port 5432 de PostgreSQL pour que l'application puisse s'y connecter

volumes:
  postgres-data: # Déclaration d'un volume nommé pour stocker les données de PostgreSQL
